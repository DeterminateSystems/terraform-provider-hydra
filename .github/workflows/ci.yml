name: CI
on:
  pull_request:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/cache@v3.3.0
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
      - name: Build
        run: nix-shell --run 'go build ./...'

  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
      - name: Check formatting
        run: |
          nix-shell --run '
            if [ "$(goimports -l $(find . -type f -name '*.go' -not -path "./vendor/*") | wc -l)" -gt 0 ]; then
              exit 1
            fi'

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
      - name: Check golint
        run: nix-shell --run 'golint -set_exit_status hydra'

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/cache@v3.3.0
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
      - name: Test Go
        run: nix-shell --run 'go test ./...'

  terraform:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/cache@v3.3.0
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
      - run: nix-shell --run 'make install'
      - name: Terraform fmt
        run: nix-shell --run 'terraform fmt -check -recursive ./examples'
      - name: Terraform init
        run: |
          nix-shell --run '
            for dir in $(find examples -type d); do
              echo "initializing dir $dir"
              terraform init $dir
            done
          '
      - name: Terraform validate
        run: |
          nix-shell --run '
            for dir in $(find examples -type d); do
              echo "validating dir $dir"
              terraform validate -no-color $dir
            done
          '
      # TODO: needs hydra running
      # - name: Terraform plan
      #   run: nix-shell --run 'terraform -chdir=./examples plan -no-color'

  vendor:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/cache@v3.3.0
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
      - name: Check vendor is up-to-date
        run: |
          nix-shell --run '
            go mod tidy
            go mod vendor
            if [ -n "$(git status -s)" ]; then
              exit 1
            fi'

  shellcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
      - name: Shellcheck ./tools/
        working-directory: ./tools
        run: nix-shell --run 'shellcheck $(find . -type f -executable)'

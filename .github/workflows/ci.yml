name: CI
on:
  pull_request:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.3
        with:
          go-version: "1.16.2"
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Build
        run: go build ./...

  format:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.3
        with:
          go-version: "1.16.2"
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Check formatting
        run: if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then exit 1; fi

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.3
        with:
          go-version: ${{ matrix.go-version }}
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Test Go
        run: go test ./...

  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.3
        with:
          go-version: "1.16.2"
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - uses: hashicorp/setup-terraform@v1
      - run: make install
      - name: Terraform fmt
        working-directory: ./examples
        run: terraform fmt -check
        continue-on-error: true
      - name: Terraform init
        working-directory: ./examples
        run: terraform init
      - name: Terraform validate
        working-directory: ./examples
        run: terraform validate -no-color
      - name: Terraform plan
        working-directory: ./examples
        run: terraform plan -no-color
